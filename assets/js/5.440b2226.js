(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{280:function(t,e,a){t.exports=a.p+"assets/img/com-recovery.805dc41f.png"},281:function(t,e,a){t.exports=a.p+"assets/img/base-oc-folder.9a1a058a.png"},282:function(t,e,a){t.exports=a.p+"assets/img/com-efi-done.a6fb730e.png"},463:function(t,e,a){t.exports=a.p+"assets/img/open-cmd-current-folder.906148d4.gif"},464:function(t,e,a){t.exports=a.p+"assets/img/macrecovery-done.1b0960bc.png"},465:function(t,e,a){t.exports=a.p+"assets/img/basesystem-example.93778929.png"},466:function(t,e,a){t.exports=a.p+"assets/img/macrecovery-after.4c24ba88.jpg"},467:function(t,e,a){t.exports=a.p+"assets/img/DiskManagement.aac12f25.jpg"},468:function(t,e,a){t.exports=a.p+"assets/img/format-usb-rufus.43feba9e.png"},469:function(t,e,a){t.exports=a.p+"assets/img/bootice.f83b0859.png"},470:function(t,e,a){t.exports=a.p+"assets/img/restore-mbr.8e5164a9.png"},471:function(t,e,a){t.exports=a.p+"assets/img/restore-mbr-file.a0daa24a.png"},472:function(t,e,a){t.exports=a.p+"assets/img/restore-pbr.2635de6c.png"},473:function(t,e,a){t.exports=a.p+"assets/img/restore-pbr-file.cbf5dcf4.png"},474:function(t,e,a){t.exports=a.p+"assets/img/final-boot-file.a45bcbb9.png"},596:function(t,e,a){"use strict";a.r(e);var r=a(10),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"在-windows-中制作安装程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-windows-中制作安装程序"}},[t._v("#")]),t._v(" 在 Windows 中制作安装程序")]),t._v(" "),e("p",[t._v("虽然你不需要重新安装macOS来使用OpenCore，但一些用户更喜欢使用全新的引导管理器升级。")]),t._v(" "),e("p",[t._v("开始之前，你需要做好以下准备：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("4GB 的 U 盘")])]),t._v(" "),e("li",[e("p",[t._v("对于大于 16GB 的 USB ，使用 "),e("a",{attrs:{href:"#rufus-method"}},[t._v("Rufus method")]),t._v(" 格式化成 FAT32。")])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/acidanthera/OpenCorePkg/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("macrecovery.py"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("这需要 "),e("a",{attrs:{href:"https://www.python.org/downloads/",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装 Python 3"),e("OutboundLink")],1)])])])]),t._v(" "),e("h2",{attrs:{id:"下载-macos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载-macos"}},[t._v("#")]),t._v(" 下载 macOS")]),t._v(" "),e("p",[t._v("要获取传统的安装程序非常容易，首先获取 "),e("a",{attrs:{href:"https://github.com/acidanthera/OpenCorePkg/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenCorePkg"),e("OutboundLink")],1),t._v(" 然后转到 "),e("code",[t._v("/Utilities/macrecovery/")]),t._v(". 接下来，单击当前文件夹路径旁边的，输入 "),e("code",[t._v("cmd")]),t._v(" ，在当前目录中打开命令提示符:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(463),alt:""}})]),t._v(" "),e("p",[t._v("现在根据你想要的macOS版本运行以下其中之一(注意这些脚本依赖于"),e("a",{attrs:{href:"https://www.python.org/downloads/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python 3"),e("OutboundLink")],1),t._v(" 支持，如果你还没有安装请安装):")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Lion (10.7):")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-2E6FAB96566FE58C "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000F25Y00 download\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-C3EC7CD22292981F "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000F0HM00 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Mountain Lion (10.8):")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-7DF2A3B5E5D671ED "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000F65100 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Mavericks (10.9):")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-F60DEB81FF30ACF6 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000FNN100 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Yosemite (10.10):")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-E43C1C25D4880AD6 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000GDVW00 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# El Capitan (10.11):")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-FFE5EF870D7BA81A "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000GQRX00 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sierra (10.12):")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-77F17D7DA9285301 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000J0DX00 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# High Sierra (10.13)")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-7BA5B2D9E42DDD94 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000J80300 download\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-BE088AF8C5EB4FA2 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000J80300 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Mojave (10.14)")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-7BA5B2DFE22DDD8C "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000KXPG00 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Catalina (10.15)")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-00BE6ED71E35EB86 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000000000 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Big Sur (11)")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-42FD25EABCABB274 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000000000 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Monterey (12)")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-FFE5EF870D7BA81A "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000000000 download\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Latest version")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ie. Ventura (13)")]),t._v("\npython3 macrecovery.py "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" Mac-4B682C642B45593E "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" 00000000000000000 download\n")])])]),e("ul",[e("li",[e("strong",[t._v("macOS 12及以上版本注意")]),t._v(": 由于最新版本的 macOS 对 USB 栈进行了更改，因此强烈建议您在安装 macOS 之前(使用 USBToolBox )映射USB端口。\n"),e("ul",[e("li",[e("span",{staticStyle:{color:"red"}},[t._v(" 注意: ")]),t._v(" 在 macOS 11.3 及更新版本中，"),e("a",{attrs:{href:"https://github.com/dortania/bugtracker/issues/162",target:"_blank",rel:"noopener noreferrer"}},[t._v("XhciPortLimit被破坏导致启动循环"),e("OutboundLink")],1),t._v(".\n"),e("ul",[e("li",[t._v("如果你已经"),e("a",{attrs:{href:"https://dortania.github.io/OpenCore-Post-Install/usb/",target:"_blank",rel:"noopener noreferrer"}},[t._v("映射了你的USB端口"),e("OutboundLink")],1),t._v(" 并且禁用了 "),e("code",[t._v("XhciPortLimit")]),t._v(" ，那么你可以正常启动 macOS 11.3+。")])])])])])]),t._v(" "),e("p",[t._v("这需要一些时间，但是一旦你完成，你应该得到BaseSystem或RecoveryImage文件:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(464),alt:""}})]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("BaseSystem")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("RecoveryImage")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("img",{attrs:{src:a(465),alt:""}})]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("img",{attrs:{src:a(466),alt:""}})])])])]),t._v(" "),e("p",[t._v("现在安装程序已经下载完毕，接下来我们要格式化USB。")]),t._v(" "),e("h2",{attrs:{id:"制作安装程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#制作安装程序"}},[t._v("#")]),t._v(" 制作安装程序")]),t._v(" "),e("p",[t._v("在这里，我们将格式化我们的 USB 并将 macOS 添加到其中，我们有两个选择:")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#disk-management-method"}},[t._v("磁盘管理方法")]),t._v(" "),e("ul",[e("li",[t._v("基于GUI，最简单的方式")]),t._v(" "),e("li",[t._v("仅支持UEFI系统(例如:2012+)")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#rufus-method"}},[t._v("Rufus 方法")]),t._v(" "),e("ul",[e("li",[t._v("基于GUI，最简单的方式")]),t._v(" "),e("li",[t._v("用于更大的USB驱动器(16GB以上)")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#diskpart-method"}},[t._v("diskpart 方法")]),t._v(" "),e("ul",[e("li",[t._v("基于命令行，更多的工作")]),t._v(" "),e("li",[t._v("传统系统所需(如：非uefi, 2012年之前)")])])])]),t._v(" "),e("h3",{attrs:{id:"磁盘管理方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#磁盘管理方法"}},[t._v("#")]),t._v(" 磁盘管理方法")]),t._v(" "),e("p",[t._v("只需打开磁盘管理，并将USB格式化为FAT32:")]),t._v(" "),e("ol",[e("li",[t._v("右键单击任务栏上的“开始”按钮并选择“磁盘管理”。")]),t._v(" "),e("li",[t._v("您应该会看到所有分区和磁盘。在下半部分，你会看到你的设备。找到你的USB。")]),t._v(" "),e("li",[t._v("你需要将USB格式化为FAT32分区。")])]),t._v(" "),e("ul",[e("li",[t._v("如果你在USB上有多个分区，右键单击每个分区并单击USB的删除卷(这将删除数据，确保你有备份，只删除USB的分区)\n"),e("ul",[e("li",[t._v("点击右键未分配的空间,创建一个新的简单卷。请确保它是FAT32，并且至少有1g或2g大。命名为“EFI”。")])])]),t._v(" "),e("li",[t._v("否则，右键单击USB上的分区，单击“格式化”，设置为FAT32。")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(467),alt:""}})]),t._v(" "),e("p",[t._v("接下来，在这个u盘的根目录下创建一个名为"),e("code",[t._v("com.apple.recovery.boot")]),t._v("的文件夹。然后移动下载的 baseSystem 或 RecoveryImage 文件。请确保将 .dmg 和 .chunklist 文件都复制到这个文件夹:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(280),alt:""}})]),t._v(" "),e("p",[t._v("现在获取之前下载的 OpenCorePkg 并打开它:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(281),alt:""}})]),t._v(" "),e("p",[t._v("这里我们看到 IA32(32位cpu) 和 X64(64位cpu) 文件夹，选择一个最适合你的硬件，并打开它。接下来，抓取里面的EFI文件夹，并将其与 com.apple.recovery.boot 一起放在USB驱动器的根目录上。完成后，它看起来应该像这样:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(282),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"rufus-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rufus-方法"}},[t._v("#")]),t._v(" Rufus 方法")]),t._v(" "),e("ol",[e("li",[t._v("下载 "),e("a",{attrs:{href:"https://rufus.ie/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rufus"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("将BOOT选项设置为“无引导”")]),t._v(" "),e("li",[t._v("设置文件系统为 Large FAT32")]),t._v(" "),e("li",[t._v("单击“开始”")]),t._v(" "),e("li",[t._v("删除u盘分区中所有“autorun”文件")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(468),alt:""}})]),t._v(" "),e("p",[t._v("接下来，在这个u盘的根目录下创建一个名为 "),e("code",[t._v("com.apple.recovery.boot")]),t._v(" 的文件夹。然后移动下载的 baseSystem 或 RecoveryImage 文件。请确保将 .dmg 和 .chunklist 文件都复制到这个文件夹:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(280),alt:""}})]),t._v(" "),e("p",[t._v("现在获取之前下载的 OpenCorePkg 并打开它:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(281),alt:""}})]),t._v(" "),e("p",[t._v("这里我们看到 IA32(32位cpu) 和 X64(64位cpu) 文件夹，选择一个最适合你的硬件，并打开它。接下来，抓取里面的EFI文件夹，并将其与 com.apple.recovery.boot 一起放在USB驱动器的根目录上。完成后，它看起来应该像这样:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(282),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"diskpart-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diskpart-方法"}},[t._v("#")]),t._v(" diskpart 方法")]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("diskpart 方法")]),t._v(" "),e("p",[t._v("按 Windows+R 并输入 "),e("code",[t._v("diskpart")]),t._v(" 。")]),t._v(" "),e("p",[t._v("现在运行以下命令:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List available disks")]),t._v("\nlist disk\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Select your disk(ie. disk 1)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" disk "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Format the drive")]),t._v("\nclean\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Convert to GPT")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Due to an odd bug with BOOTICE and DuetPkg, MBR disks will fail to boot")]),t._v("\nconvert gpt\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a new partition")]),t._v("\ncreate partition primary\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Select your partition")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Running clean ensures we only have 1 partition so it will be "partition 1"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" partition "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Format the drive as FAT32")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("fs")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("fat32 quick\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Assign a drive letter(ie. Drive E, ensure it's not currently in use)")]),t._v("\nASSIGN "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LETTER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("E\n")])])]),e("p",[t._v("接下来，在这个u盘的根目录下创建一个名为 "),e("code",[t._v("com.apple.recovery.boot")]),t._v(" 的文件夹。然后移动下载的 baseSystem 或 RecoveryImage 文件。请确保将 .dmg 和 .chunklist 文件都复制到这个文件夹:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(280),alt:""}})]),t._v(" "),e("p",[t._v("现在获取之前下载的 OpenCorePkg 并打开它:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(281),alt:""}})]),t._v(" "),e("p",[t._v("这里我们看到 IA32(32位cpu) 和 X64(64位cpu) 文件夹，选择一个最适合你的硬件，并打开它。接下来，抓取其中的EFI文件夹，并将其与 com.apple.recovery.boot 放在USB驱动器的根目录下。完成后，它看起来应该像这样:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(282),alt:""}})]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("传统安装设置")]),t._v(" "),e("p",[t._v("如果您的固件不支持UEFI，请参阅以下说明:")]),t._v(" "),e("p",[t._v("首先，你需要以下东西:")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.7-zip.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("7-Zip"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.majorgeeks.com/files/details/bootice_64_bit.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("BOOTICE"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/acidanthera/OpenCorePkg/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenCorePkg"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("接下来，打开 BOOTICE 并确保选择了正确的驱动器。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(469),alt:""}})]),t._v(" "),e("p",[t._v("接下来，输入“Process MBR”，然后选择“Restore MBR”，并在 OpenCorePkg 中从 "),e("code",[t._v("Utilities/LegacyBoot/")]),t._v(" 中选择 "),e("strong",[t._v("boot0")]),t._v(" 文件:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Restore MBR")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Restore boot0 file")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("img",{attrs:{src:a(470),alt:""}})]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("img",{attrs:{src:a(471),alt:""}})])])])]),t._v(" "),e("p",[t._v('返回主界面，选择 "Process PBR" 然后选择 "Restore PBR". 从 OpenCorePkg 的 '),e("code",[t._v("Utilities/LegacyBoot/")]),t._v(" 中选择 "),e("strong",[t._v("boot1f32")]),t._v(" 文件:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Restore PBR")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Restore boot1f32 file")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("img",{attrs:{src:a(472),alt:""}})]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("img",{attrs:{src:a(473),alt:""}})])])])]),t._v(" "),e("p",[t._v("一旦完成，回到你的USB，做最后一件事。从 "),e("code",[t._v("Utilities/LegacyBoot/")]),t._v(" 中获取 "),e("strong",[t._v("bootx64")]),t._v(" (64位cpu)或 "),e("strong",[t._v("bootia32")]),t._v(" (32位cpu)文件，并将其放在驱动器的根目录下。 "),e("strong",[t._v("将这个文件重命名为boot")]),t._v(" 以确保DuetPkg可以正常运行:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(474),alt:""}})])])]),t._v(" "),e("h2",{attrs:{id:"现在所有这些都完成了-前往设置efi来完成你的工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#现在所有这些都完成了-前往设置efi来完成你的工作"}},[t._v("#")]),t._v(" 现在所有这些都完成了，前往"),e("RouterLink",{attrs:{to:"/installer-guide/opencore-efi.html"}},[t._v("设置EFI")]),t._v("来完成你的工作")],1)])}),[],!1,null,null,null);e.default=s.exports}}]);